#! /usr/bin/env python

PACKAGE='mr_goto'
from dynamic_reconfigure.parameter_generator_catkin import *
gen = ParameterGenerator()

mode_enum = gen.enum([ gen.const("Stop",           int_t, 0, "A small constant"),
                       gen.const("GoTo",           int_t, 1, "A medium constant"),
                       gen.const("GoTo2",          int_t, 2, "A large constant")],
                       "An enum select an operation mode")
gen.add("plot_data",   bool_t,   0, "",  False)
gen.add("mode", int_t, 0, "A size parameter which is edited via an enum", 0, 0, 2, edit_method=mode_enum)
gen.add("use_path", bool_t, 0, "Whether to use the path planner path or take a direct route", True)
gen.add("path_lookahead", int_t, 0, "How many steps to look ahead on the path as the next sub-goal", 5, 3, 10)
gen.add("max_v", double_t, 0, "maximum velocity in m/s", 0.5, 0.0, 5.0)
gen.add("max_w", double_t, 0, "maximum rotation velocity in rad/s", 0.3, 0.0, 1.0)
gen.add("max_acc_tra", double_t, 0, "maximum velocity acceleration in m/s2", 0.4, 0.0, 1.0)
gen.add("max_acc_rot", double_t, 0, "maximum rotational acceleration in rad/s2", 0.2, 0.0, 0.3)
gen.add("alpha", double_t, 0, "velocity weight", 1.0, 0.0, 100.0)
gen.add("beta", double_t, 0, "sub-goal distance weight", 80.0, 0.0, 100.0)
gen.add("gamma", double_t, 0, "rotation weight", 0.0, 0.0, 100.0)
gen.add("delta", double_t, 0, "goal dinstance weight", 20.0, 0.0, 100.0)
gen.add("safe_zone", double_t, 0, "amount to substract from laser measurement", 0.5, 0.0, 1.0)
gen.add("map_pix_x", int_t, 0, "map size in pixel", 500, 10, 2000)
gen.add("map_pix_y", int_t, 0, "map size in pixel", 500, 10, 2000)
gen.add("map_max_x", double_t, 0, "map size in meter", 5, -10, 10)
gen.add("map_max_y", double_t, 0, "map size in meter", 5, -10, 10)
gen.add("map_min_x", double_t, 0, "map size in meter",-5, -10, 10)
gen.add("map_min_y", double_t, 0, "map size in meter",-5, -10, 10)
gen.add("map_grid_x", double_t, 0, "grid size in meter", 1, 0, 10)
gen.add("map_grid_y", double_t, 0, "grid size in meter", 1, 0, 10)
gen.add("map_rotation", double_t, 0, "map rotation in rad", 0, -3.14, 3.14)

exit(gen.generate(PACKAGE, "mr_goto", "Goto"))
